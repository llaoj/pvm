#! /bin/bash

VERSION='0.0.1'
brew_prefix=$(brew --prefix)

function log() {
    echo "$1"
}

function get_php_bin_path() {
    ls -d "$brew_prefix"/Cellar/php*/"$1"*/bin
}

function get_php_versions() {
    find "$brew_prefix"/Cellar/php*/* -maxdepth 0 | grep -E -o '/[0-9]+.[0-9]+' | sed -E 's#/##'
}

function get_current_php_version() {
    PHP_VERSION=$(php -v | grep -Eo 'PHP [0-9]+.[0-9]+')
    echo "${PHP_VERSION/PHP /}"
}

function set_php_version() {
    php_versions="$(get_php_versions)"
    if ! echo "$php_versions" | grep -q "$1"; then
        echo "Could not find PHP version $1, is it installed?"
        return
    fi

    php_bin_path=$(get_php_bin_path "$1")
    ln -sf "$php_bin_path"/php /usr/local/bin/php
}

if [[ $1 == 'current' ]]; then
    get_current_php_version
fi

if [[ $1 == 'use' ]]; then
    if [[ -n $2 ]]; then
        log "use $2"
        set_php_version "$2"
    elif [[ -f ./composer.json ]]; then
        use_version=$(jq <composer.json '.require.php' | grep -Eo '[0-9](.[0-9])?' | head -n 1)
        log "use v$use_version from composer.json"
        if [[ -n $use_version ]]; then
            set_php_version "$use_version"
            return
        fi
    fi
fi

if [[ $1 == 'list' || $1 == 'ls' ]]; then
    get_php_versions
fi

if [[ $1 == '--version' || $1 == '-v' ]]; then
    echo $VERSION
fi

if [[ $1 == '--help' || $1 == '-h' ]]; then
    echo "pvm $VERSION
A fast and simple PHP version manager

USAGE:
    pvm <SUBCOMMAND>

FLAGS:
    -h, --help
        Prints help information

    -v, --version
        Prints version information

SUBCOMMANDS:
    current       Print the current PHP version
    use [version] Change PHP version
    list          List all available PHP versions [alias: ls]
"
fi
